#1. Creating the matrix#create an empty list that will be our matrixmatrix = []#this will be the number that gets appended to the matrixnum = 1#create a loop within a loop that will create 10 rows and in each row will append a numberfor i in range(10):    row = []    #This loop will be done 10 times for each row    for i in range(10):        row.append(num)        #incrementing the number by 10 will insure there are only odd numbers in the matrix        num += 2    #after 10 numbers have been added to each row, that row will be appended to the matrix    matrix.append(row)#2. Calculate the trace of this matrix using list index positions. Store it as a variable.#initialize the variable trace that will store our answertrace = 0#this for loop loops through 10 times as there are ten numbers along the principal diagonal we want to sumfor i in range(10):    #because each diagonal has the coordinates of 0,0, 1,1 etc, we can use list of list indexing with the same index to add the principal diagonal together    trace = trace + matrix[i][i]    #3. Display the trace with the sentence “The trace of your matrix is X”, where X is the variable containing the calculated trace.print(f'The trace of your matrix is {trace}.')#4. Calculate the sum of all elements in the upper triangle of the matrix. Store it as a variable.#initialize the variable that will store our answeruppersum = 0#these two for loops loop through only the numbers in the matrix above the principal diagonal    #this first line loops through each row of the matrixfor i in range(10):    #this loop loops through only the columns that are above the principal axis line. for example, if i is 1 to correspond to the second row, the columns only loop 2-9 (third through 10th column)    for j in range(i+1,10):        #uppersum is updated to add whichever number is in those positions        uppersum += matrix[i][j]    #Display the sum of all elements in the upper triangle of the matrix where uppersum is the variable containing the calculated sum of upper triangular elements.print(f'The sum of upper triangular elements in your matrix is {uppersum}')#5. Calculate the sum of all elements in the lower triangle of the matrix. Store it as a variable.    #initialize the variable that will store our answerlowersum = 0#these two for loops loop through only the numbers in the matrix below the principal diagonal    #this first line loops through each row of the matrixfor i in range(10):    #this loop loops through only the columns that are above the principal axis line. for example, if i is 1 to correspond to the second row, the columns only loop 2-9 (third through 10th column)    for j in range(i+1,10):        #this is different from upper as it appends the opposite values (below the principal diagonal)        lowersum += matrix[9-i][9-j]#Display the sum of all elements in the upper triangle of the matrix where lowersum is the variable containing the calculated sum of lower triangular elements.print(f'The sum of lower triangular elements in your matrix is {lowersum}')